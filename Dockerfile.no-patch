# 简化版 Dockerfile - 跳过 patch-package（应急方案）
FROM wxingheng/node-chrome-base:latest

# 强制使用官方npm源
ENV NPM_CONFIG_REGISTRY=https://registry.npmjs.org/
ENV YARN_REGISTRY=https://registry.npmjs.org/

# 基础环境配置
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_OPTIONS="--max-old-space-size=4096"

# 设置工作目录
WORKDIR /app

# 复制依赖文件
COPY package.json yarn.lock ./

# 临时修改 package.json 移除 postinstall 脚本
RUN cp package.json package.json.backup && \
    node -e "const pkg=require('./package.json'); delete pkg.scripts.postinstall; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));"

# 强力修复：清除配置文件，重置配置，立即安装依赖（在同一RUN命令中）
RUN yarn --version && \
    echo "=== 清除前检查 ===" && \
    ls -la /root/.npmrc /usr/local/share/.yarnrc 2>/dev/null || echo "No config files" && \
    echo "=== 开始清除配置文件 ===" && \
    rm -f /root/.npmrc /usr/local/share/.yarnrc /usr/local/etc/npmrc /usr/local/etc/yarnrc && \
    rm -f /app/.npmrc /app/.yarnrc && \
    echo "=== 重置npm和yarn配置 ===" && \
    npm config set registry https://registry.npmjs.org/ && \
    yarn config set registry https://registry.npmjs.org/ && \
    echo "=== 验证配置 ===" && \
    npm config get registry && \
    yarn config get registry && \
    yarn config list | grep registry && \
    echo "=== 开始安装依赖（跳过 postinstall）===" && \
    yarn install --frozen-lockfile --production=false --registry https://registry.npmjs.org/ --verbose

# 恢复原始 package.json 并手动应用补丁
RUN mv package.json.backup package.json && \
    echo "=== 手动应用 markdown-to-poster 补丁 ===" && \
    if [ -d "patches" ]; then \
        echo "发现补丁目录，手动修复..."; \
        sed -i 's/const { node: u, src: o, \.\.\.l } = a, f = o && `https:\/\/api\.allorigins\.win\/raw\?url=\${encodeURIComponent(o)}`/const { node: u, src: o, ...l } = a, f = o \&\& `\${o}`/g' node_modules/markdown-to-poster/dist/markdown-to-poster.js || echo "补丁应用失败，继续..."; \
    else \
        echo "未发现补丁目录，跳过..."; \
    fi

# 复制源代码
COPY . .

# 构建应用
RUN yarn build

# 清理开发依赖
RUN yarn install --production --frozen-lockfile --registry https://registry.npmjs.org/ --verbose && \
    yarn cache clean --verbose

EXPOSE 3000

# 启动应用
CMD ["yarn", "start"]
